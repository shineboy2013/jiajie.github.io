<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jiajie&#39;s blog</title>
  
  <subtitle>每天积累多一些</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shineboy2013.github.com/"/>
  <updated>2017-11-28T09:54:42.943Z</updated>
  <id>https://shineboy2013.github.com/</id>
  
  <author>
    <name>KK Shum</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 122 Best Time to Buy and Sell Stock II</title>
    <link href="https://shineboy2013.github.com/2017/11/28/lee-122/"/>
    <id>https://shineboy2013.github.com/2017/11/28/lee-122/</id>
    <published>2017-11-28T09:39:08.641Z</published>
    <updated>2017-11-28T09:54:42.943Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener">LeetCode 122 Best Time to Buy and Sell Stock II</a></strong></p><p>Say you have an array for which the <em>i</em><sup>th</sup> element is the price of a given stock on day <em>i</em>.</p><p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a><strong>解题思路：</strong></h3><p>仍然是求最大利润，可以交易多次，但要先卖再买。容易想到是求所有上升坡的的总和。更简单而言，若将每一个上升坡，分成一小段(每天的交易)，求这些小段的和即可。<br>如：[6, 1, 2, 3, 4]中的1, 2, 3, 4序列来说，对于两种操作方案：<br>1 在1买入，4卖出<br>2 在1买入，2卖出同时买入，3卖出同时买入，4卖出<br>这两种操作下，收益是一样的。这种方法，避免检测下坡以及计算每段的和。</p><p><img src="/images/L122.png" alt=""></p><h3 id="Java代码："><a href="#Java代码：" class="headerlink" title="Java代码："></a><strong>Java代码：</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(prices.length==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> profit = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;prices.length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(prices[i-<span class="number">1</span>]&lt;prices[i])</span><br><span class="line">profit += prices[i] - prices[i-<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> profit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法分析："><a href="#算法分析：" class="headerlink" title="算法分析："></a><strong>算法分析：</strong></h3><p>时间复杂度为<code>O(n)</code>，n为字符串长度，空间复杂度<code>O(1)</code>。</p><h3 id="相关题目："><a href="#相关题目：" class="headerlink" title="相关题目："></a><strong>相关题目：</strong></h3><p><a href="https://shineboy2013.github.io/2017/11/27/lee-121/" target="_blank" rel="noopener">LeetCode 121 Best Time to Buy and Sell Stock</a><br><a href="https://shineboy2013.github.io/2017/11/28/lee-122/" target="_blank" rel="noopener">LeetCode 122 Best Time to Buy and Sell Stock II</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LeetCode 122 Best Time
      
    
    </summary>
    
    
      <category term="Array" scheme="https://shineboy2013.github.com/tags/Array/"/>
    
      <category term="Greedy" scheme="https://shineboy2013.github.com/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 121 Best Time to Buy and Sell Stock</title>
    <link href="https://shineboy2013.github.com/2017/11/27/lee-121/"/>
    <id>https://shineboy2013.github.com/2017/11/27/lee-121/</id>
    <published>2017-11-27T08:05:59.671Z</published>
    <updated>2017-11-28T09:54:31.416Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/" target="_blank" rel="noopener">LeetCode 121 Best Time to Buy and Sell Stock</a></strong></p><p>Say you have an array for which the <em>i</em><sup>th</sup> element is the price of a given stock on day <em>i</em>.</p><p>If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p><p><strong>Example 1:</strong>  </p><pre>Input: [7, 1, 5, 3, 6, 4]Output: 5max. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)</pre><p><strong>Example 2:</strong>  </p><pre>Input: [7, 6, 4, 3, 1]Output: 0In this case, no transaction is done, i.e. max profit = 0.</pre><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a><strong>解题思路：</strong></h3><p>最多只能一次交易：买入卖出，求最大利润。利润=当前价格-买入价，利润作为第一个变量求其最大值。由于买入价越低，利润可能会越大，所以第二个变量就要不断更新买入价（最小值）。</p><p><img src="/images/L121.png" alt=""></p><h3 id="Java代码："><a href="#Java代码：" class="headerlink" title="Java代码："></a><strong>Java代码：</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(prices.length==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> min = prices[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> curProfit = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;prices.length;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> todayProfit = prices[i]-min;</span><br><span class="line"><span class="keyword">if</span>(todayProfit&gt;curProfit)</span><br><span class="line">curProfit = todayProfit;</span><br><span class="line"><span class="keyword">if</span>(min&gt;prices[i])</span><br><span class="line">min = prices[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> curProfit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法分析："><a href="#算法分析：" class="headerlink" title="算法分析："></a><strong>算法分析：</strong></h3><p>时间复杂度为<code>O(n)</code>，n为字符串长度，空间复杂度<code>O(1)</code>。</p><h3 id="相关题目："><a href="#相关题目：" class="headerlink" title="相关题目："></a><strong>相关题目：</strong></h3><p><a href="https://shineboy2013.github.io/2017/11/27/lee-121/" target="_blank" rel="noopener">LeetCode 121 Best Time to Buy and Sell Stock</a><br><a href="https://shineboy2013.github.io/2017/11/28/lee-122/" target="_blank" rel="noopener">LeetCode 122 Best Time to Buy and Sell Stock II</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LeetCode 121 Best Time to
      
    
    </summary>
    
    
      <category term="Array" scheme="https://shineboy2013.github.com/tags/Array/"/>
    
      <category term="Dynamic Programming" scheme="https://shineboy2013.github.com/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode Index Page</title>
    <link href="https://shineboy2013.github.com/2017/11/02/lee/"/>
    <id>https://shineboy2013.github.com/2017/11/02/lee/</id>
    <published>2017-11-02T11:43:32.924Z</published>
    <updated>2017-11-28T09:53:17.150Z</updated>
    
    <content type="html"><![CDATA[<p><strong>LeetCode 目录</strong></p><table><thead><tr><th>#</th><th style="text-align:left">Title</th><th style="text-align:left">Difficulty</th></tr></thead><tbody><tr><td>121</td><td style="text-align:left"><a href="https://shineboy2013.github.io/2017/11/27/lee-121/" target="_blank" rel="noopener">Best Time to Buy and Sell Stock</a></td><td style="text-align:left">Easy</td></tr><tr><td>122</td><td style="text-align:left"><a href="https://shineboy2013.github.io/2017/11/28/lee-122/" target="_blank" rel="noopener">Best Time to Buy and Sell Stock II</a></td><td style="text-align:left">Easy</td></tr><tr><td>381</td><td style="text-align:left">Insert Delete GetRandom O(1) - Duplicates allowed</td><td style="text-align:left">Hard</td></tr><tr><td>415</td><td style="text-align:left"><a href="https://shineboy2013.github.io/2017/11/02/lee-415/" target="_blank" rel="noopener">Add Strings</a></td><td style="text-align:left">Easy</td></tr><tr><td>557</td><td style="text-align:left"><a href="https://shineboy2013.github.io/2017/11/02/lee-557/" target="_blank" rel="noopener">Reverse Words in a String III</a></td><td style="text-align:left">Easy</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;LeetCode 目录&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Title&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Diffi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 557 Reverse Words in a String III</title>
    <link href="https://shineboy2013.github.com/2017/11/02/lee-557/"/>
    <id>https://shineboy2013.github.com/2017/11/02/lee-557/</id>
    <published>2017-11-02T11:43:32.737Z</published>
    <updated>2017-04-24T00:31:49.774Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://leetcode.com/problems/reverse-words-in-a-string-iii/" target="_blank" rel="noopener">LeetCode 557 Reverse Words in a String III</a></strong></p><p>Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p><p><strong>Example 1:</strong></p><pre>Input: "Let's take LeetCode contest"Output: "s'teL ekat edoCteeL tsetnoc"</pre><p><strong>Note:</strong>In the string, each word is separated by single space and there will not be any extra space in the string.</p><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a><strong>解题思路：</strong></h3><p>这里考到StringBuilder，对于字符串连接效率高。还有一个小技巧，就是往输入参数附加一个空格，这样for循环结束后不用特别处理边界情况。<br>第一种方法是以单词为扫描单位，把字符串分成单词字符串数组，然后把每个单词反转及一个空格加入到结果sb中。<br>第二种方法是以字符为扫描单位，遇到空格是，就把之前存入的word放入sb中，再进行下一轮word扫描。</p><h3 id="Java代码："><a href="#Java代码：" class="headerlink" title="Java代码："></a><strong>Java代码：</strong></h3><p>第一种方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">reverseWords</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">String[] tokens = s.split(<span class="string">" "</span>);</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="keyword">for</span>(String token : tokens)</span><br><span class="line">sb.append(<span class="keyword">new</span> StringBuilder(token).reverse().toString()+<span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sb.toString().trim();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>第二种方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">reverseWords</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">s = s+<span class="string">" "</span>;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">StringBuilder word = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">char</span> c : s.toCharArray())&#123;</span><br><span class="line"><span class="keyword">if</span>(c!=<span class="string">' '</span>)</span><br><span class="line">word.append(c);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sb.append(word.reverse().toString()+<span class="string">" "</span>);</span><br><span class="line">word = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sb.toString().trim();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="算法分析："><a href="#算法分析：" class="headerlink" title="算法分析："></a><strong>算法分析：</strong></h3><p>两种方法时间复杂度为<code>O(n)</code>，n为字符串长度。第一种方法空间复杂度为<code>O(n)</code>，而第二种方法为<code>O(1)</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://leetcode.com/problems/reverse-words-in-a-string-iii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LeetCode 557 Reverse Words 
      
    
    </summary>
    
    
      <category term="String" scheme="https://shineboy2013.github.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 415 Add Strings</title>
    <link href="https://shineboy2013.github.com/2017/11/02/lee-415/"/>
    <id>https://shineboy2013.github.com/2017/11/02/lee-415/</id>
    <published>2017-11-02T11:43:32.612Z</published>
    <updated>2017-11-27T01:49:55.790Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://leetcode.com/problems/add-strings/" target="_blank" rel="noopener">LeetCode 415 Add Strings</a></strong></p><p>Given two non-negative numbers <code>num1</code> and <code>num2</code> represented as string, return the sum of <code>num1</code> and <code>num2</code>.</p><p><strong>Note:</strong></p><ol><li>The length of both <code>num1</code> and <code>num2</code> is &lt; 5100.</li><li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li><li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li><li>You <strong>must not use any built-in BigInteger library</strong> or <strong>convert the inputs to integer</strong> directly.</li></ol><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a><strong>解题思路：</strong></h3><p>对每一位进行加法，注意进位和长度不一，类似于merge sort里面merge的实现。最要注意的是进位carry的edge case：for循环后最后值要特别处理。</p><h3 id="Java代码："><a href="#Java代码：" class="headerlink" title="Java代码："></a><strong>Java代码：</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addStrings</span><span class="params">(String num1, String num2)</span> </span>&#123;</span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">int</span> i=num1.length()-<span class="number">1</span>,j=num2.length()-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> carry=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&gt;=<span class="number">0</span> &amp;&amp; j&gt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = Integer.parseInt(num1.charAt(i)+<span class="string">""</span>)+Integer.parseInt(num2.charAt(j)+<span class="string">""</span>)+carry;</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;=<span class="number">10</span>)</span><br><span class="line">carry = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> carry = <span class="number">0</span>;</span><br><span class="line">sb.append(tmp%<span class="number">10</span>);</span><br><span class="line">i--;</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i&gt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = Integer.parseInt(num1.charAt(i)+<span class="string">""</span>)+carry;</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;=<span class="number">10</span>)</span><br><span class="line">carry = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> carry = <span class="number">0</span>;</span><br><span class="line">sb.append(tmp%<span class="number">10</span>);</span><br><span class="line">i--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(j&gt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = Integer.parseInt(num2.charAt(j)+<span class="string">""</span>)+carry;</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;=<span class="number">10</span>)</span><br><span class="line">carry = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> carry = <span class="number">0</span>;</span><br><span class="line">sb.append(tmp%<span class="number">10</span>);</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(carry&gt;<span class="number">0</span>)</span><br><span class="line">sb.append(carry);</span><br><span class="line"><span class="keyword">return</span> sb.reverse().toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法分析："><a href="#算法分析：" class="headerlink" title="算法分析："></a><strong>算法分析：</strong></h3><p>时间复杂度为<code>O(n)</code>，n为字符串较长者长度。空间复杂度为<code>O(1)</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://leetcode.com/problems/add-strings/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LeetCode 415 Add Strings&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="Array" scheme="https://shineboy2013.github.com/tags/Array/"/>
    
      <category term="Math" scheme="https://shineboy2013.github.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>知识点</title>
    <link href="https://shineboy2013.github.com/2017/11/02/kb/"/>
    <id>https://shineboy2013.github.com/2017/11/02/kb/</id>
    <published>2017-11-02T11:43:32.566Z</published>
    <updated>2017-11-27T01:46:38.611Z</updated>
    
    <content type="html"><![CDATA[<p><strong>常用知识点</strong></p><table><thead><tr><th>类型</th><th style="text-align:left">函数名</th><th style="text-align:left">作用</th><th style="text-align:left">输入参数</th><th style="text-align:left">返回值</th><th style="text-align:left">例子</th></tr></thead><tbody><tr><td>String</td><td style="text-align:left">split</td><td style="text-align:left">根据输入参数分拆成字符串数组</td><td style="text-align:left">String</td><td style="text-align:left">String[]</td><td style="text-align:left">String[] tokens = s.split(“ “);</td></tr><tr><td>String</td><td style="text-align:left">trim</td><td style="text-align:left">将前后空格去掉</td><td style="text-align:left">N/A</td><td style="text-align:left">String</td><td style="text-align:left">s = s.trim()</td></tr><tr><td>String</td><td style="text-align:left">toCharArray</td><td style="text-align:left">将字符串变成字符数组</td><td style="text-align:left">N/A</td><td style="text-align:left">char</td><td style="text-align:left">char[] a = s.toCharArray()</td></tr><tr><td>String</td><td style="text-align:left">charAt</td><td style="text-align:left">取某字符</td><td style="text-align:left">int</td><td style="text-align:left">char</td><td style="text-align:left">num1.charAt(i)</td></tr><tr><td>Integer</td><td style="text-align:left">parseInt</td><td style="text-align:left">字符串变整型</td><td style="text-align:left">String</td><td style="text-align:left">int</td><td style="text-align:left">Integer.parseInt(“2”)</td></tr><tr><td>StringBuilder</td><td style="text-align:left">append</td><td style="text-align:left">将新字符（串）加入到末尾</td><td style="text-align:left">String或char</td><td style="text-align:left">N/A</td><td style="text-align:left">sb.append(“abc”)</td></tr><tr><td>StringBuilder</td><td style="text-align:left">new StringBuilder()</td><td style="text-align:left">新建这个类当然也将目前字符串清空</td><td style="text-align:left">N/A</td><td style="text-align:left">N/A</td><td style="text-align:left">sb=new StringBuilder()</td></tr><tr><td>StringBuilder</td><td style="text-align:left">reverse</td><td style="text-align:left">反转</td><td style="text-align:left">N/A</td><td style="text-align:left">StringBuilder</td><td style="text-align:left">sb.reverse()</td></tr><tr><td>StringBuilder</td><td style="text-align:left">toString</td><td style="text-align:left">StringBuilder变成字符串</td><td style="text-align:left">N/A</td><td style="text-align:left">String</td><td style="text-align:left">sb.toString()</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;常用知识点&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;函数名&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;作用&lt;/th&gt;
&lt;th 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://shineboy2013.github.com/2017/11/02/hello-world/"/>
    <id>https://shineboy2013.github.com/2017/11/02/hello-world/</id>
    <published>2017-11-02T11:43:32.503Z</published>
    <updated>2016-10-12T05:23:01.798Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
